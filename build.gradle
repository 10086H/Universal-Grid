buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

repositories {
  	maven {
    	name = "Progwml6 maven"
    	url = "https://dvs1.progwml6.com/files/maven/"
  	}
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

version = "${mod_version}"
group = "com.YTrollman.UniversalGrid"
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "official", version: "${mc_version}"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=universalgrid.mixins.json"

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'

            mods {
                universalgrid {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=universalgrid.mixins.json"
	    
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'

            mods {
                universalgrid {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=universalgrid.mixins.json"

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
            properties 'mixin.env.disableRefMap': 'true'

            args '--mod', 'universalgrid', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                universalgrid {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}")

    implementation fg.deobf("curse.maven:refinedstorage-243076:3712882")
    compileOnly fg.deobf('curse.maven:mouse-tweaks-60089:3601896')
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3:api")

    implementation fg.deobf("curse.maven:libx-412525:3755838")

    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "universalgrid",
            "Specification-Vendor": "universalgridsareus",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"universalgridsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')